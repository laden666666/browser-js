// Generated by CoffeeScript 1.6.3
(function() {
  describe('Browser', function() {
    it('can determine if the operating system is OSX', function() {
      return expect(Browser.osx()).toBeDefined();
    });
    it('can determine if the operating system is Linux', function() {
      return expect(Browser.linux()).toBeDefined();
    });
    it('can determine if the operating system is Windows', function() {
      return expect(Browser.windows()).toBeDefined();
    });
    it('can determine operating system in meta object', function() {
      return expect(Browser.meta().os).toBeDefined();
    });
    it('can determine browser vendor name in meta object', function() {
      return expect(Browser.meta().name).toBeDefined();
    });
    it('can determine browser version in meta object', function() {
      return expect(Browser.meta().version).toBeDefined();
    });
    it('can determine if device is iPhone', function() {
      return expect(Browser.iphone()).toBeDefined();
    });
    it('can determine if device is iPad', function() {
      return expect(Browser.ipad()).toBeDefined();
    });
    it('can determine if device is iPod', function() {
      return expect(Browser.ipod()).toBeDefined();
    });
    it('can determine if device is Kindle', function() {
      return expect(Browser.kindle()).toBeDefined();
    });
    it('can determine if device is PSP', function() {
      return expect(Browser.psp()).toBeDefined();
    });
    it('can determine browser semantic version', function() {
      return expect(Browser.semver()).toBeDefined();
    });
    it('can determine browser version', function() {
      return expect(Browser.version()).toBeDefined();
    });
    it('can determine the browser vendor', function() {
      return expect(Browser.vendor()).toBeDefined();
    });
    it('can determine if browser vendor is Chrome', function() {
      return expect(Browser.chrome()).toBeDefined();
    });
    it('can determine if browser vendor is Safari', function() {
      return expect(Browser.safari()).toBeDefined();
    });
    it('can determine if browser vendor is Firefox', function() {
      return expect(Browser.firefox()).toBeDefined();
    });
    return it('can determine if browser vendor is Internet Explorer', function() {
      return expect(Browser.ie()).toBeDefined();
    });
  });

}).call(this);
